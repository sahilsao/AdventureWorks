// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using AdventureWorks.Data;
using AdventureWorks.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace AdventureWorks.Data.Configurations
{
    public partial class DatabaseLogConfiguration : IEntityTypeConfiguration<DatabaseLog>
    {
        public void Configure(EntityTypeBuilder<DatabaseLog> entity)
        {
            entity.HasKey(e => e.DatabaseLogID)
                .HasName("PK_DatabaseLog_DatabaseLogID")
                .IsClustered(false);

            entity.ToTable("DatabaseLog", tb => tb.HasComment("Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog."));

            entity.Property(e => e.DatabaseLogID).HasComment("Primary key for DatabaseLog records.");
            entity.Property(e => e.DatabaseUser).HasComment("The user who implemented the DDL change.");
            entity.Property(e => e.Event).HasComment("The type of DDL statement that was executed.");
            entity.Property(e => e.Object).HasComment("The object that was changed by the DDL statment.");
            entity.Property(e => e.PostTime).HasComment("The date and time the DDL change occurred.");
            entity.Property(e => e.Schema).HasComment("The schema to which the changed object belongs.");
            entity.Property(e => e.TSQL).HasComment("The exact Transact-SQL statement that was executed.");
            entity.Property(e => e.XmlEvent).HasComment("The raw XML data generated by database trigger.");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DatabaseLog> entity);
    }
}
